{"version":3,"sources":["Hello.js","store.js","form.js","index.js"],"names":["name","COUNTER_INCREMENT","COUNTER_DECREMENT","countIntialState","count","rootReducer","redux","counter","state","action","type","form","formReducer","store","thunk","onSubmit","values","console","log","reduxForm","props","handleSubmit","pristine","reset","submitting","Field","component","placeholder","value","onClick","disabled","App","Hello","this","Component","render","document","getElementById"],"mappings":"iLAEe,kBAAGA,EAAH,EAAGA,KAAH,OAAc,wCAAWA,EAAX,Q,wCCGhBC,EAAoB,oBACpBC,EAAoB,oBAE3BC,EAAmB,CACvBC,MAAO,GAmBHC,EAAcC,IAAsB,CACtCC,QAjBiB,WAAuC,IAAtCC,EAAqC,uDAA7BL,EAAkBM,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKT,EACH,OAAO,2BAAKO,GAAZ,IAAmBJ,MAAOI,EAAMJ,MAAQ,IAG1C,KAAKF,EACH,OAAO,2BAAKM,GAAZ,IAAmBJ,MAAOI,EAAMJ,MAAQ,IAG1C,QACE,OAAOI,IAOTG,KAAMC,MAKKC,EADDP,IAAkBD,EAAaC,IAAsBQ,M,kBC9B7DC,EAAW,SAACC,GAChBC,QAAQC,IAAIF,IAmGCG,cAAU,CACvBR,KAAM,UADOQ,EAhGI,SAAAC,GAAU,IACnBC,EAA8CD,EAA9CC,aAAcC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,MAAOC,EAAeJ,EAAfI,WACvC,OACE,gCACE,gCACE,+CACA,8BACE,cAACC,EAAA,EAAD,CACEzB,KAAK,YACL0B,UAAU,QACVhB,KAAK,OACLiB,YAAY,oBAKlB,gCACE,0CACA,8BACE,cAACF,EAAA,EAAD,CACEzB,KAAK,QACL0B,UAAU,QACVhB,KAAK,QACLiB,YAAY,eAIlB,gCACE,2CACA,gCACE,kCACE,cAACF,EAAA,EAAD,CACEzB,KAAK,SACL0B,UAAU,QACVhB,KAAK,QACLkB,MAAM,MACL,IANL,OASA,kCACE,cAACH,EAAA,EAAD,CACEzB,KAAK,SACL0B,UAAU,QACVhB,KAAK,QACLkB,MAAM,MACL,IANL,OASA,kCACE,cAACH,EAAA,EAAD,CACEzB,KAAK,SACL0B,UAAU,QACVhB,KAAK,QACLkB,MAAM,MACL,IANL,OASA,kCACE,cAACH,EAAA,EAAD,CACEzB,KAAK,SACL0B,UAAU,QACVhB,KAAK,QACLkB,MAAM,MACL,IANL,OASA,kCACE,cAACH,EAAA,EAAD,CACEzB,KAAK,SACL0B,UAAU,QACVhB,KAAK,QACLkB,MAAM,MACL,IANL,aAYJ,gCACE,6CACA,8BACE,cAACH,EAAA,EAAD,CAAOzB,KAAK,WAAW0B,UAAU,kBAGrC,gCACE,wBAAQhB,KAAK,SAASmB,QAASR,EAAaN,GAAWe,SAAUR,GAAYE,EAA7E,oBAGA,wBAAQd,KAAK,SAASoB,SAAUR,GAAYE,EAAYK,QAASN,EAAjE,mCCxFFQ,E,kDACJ,aAAe,IAAD,8BACZ,gBACKvB,MAAQ,CACXR,KAAM,SAHI,E,0CAOd,WACE,OACE,cAAC,IAAD,CAAUa,MAAOA,EAAjB,SACA,gCACE,cAACmB,EAAD,CAAOhC,KAAMiC,KAAKzB,MAAMR,OACxB,cAAC,EAAD,a,GAbUkC,aAoBlBC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.788fa65d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ name }) => <h1>Hello {name}!</h1>;\r\n","import * as redux from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\n// Actions\r\nexport const COUNTER_INCREMENT = 'counter/increment';\r\nexport const COUNTER_DECREMENT = 'counter/decrement';\r\n\r\nconst countIntialState = {\r\n  count: 0\r\n}\r\n\r\nconst countReducer = (state = countIntialState, action) => {\r\n  switch (action.type) {\r\n    case COUNTER_INCREMENT: {\r\n      return { ...state, count: state.count + 1 };\r\n      break;\r\n    }\r\n    case COUNTER_DECREMENT: {\r\n      return { ...state, count: state.count - 1 };\r\n      break;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst rootReducer = redux.combineReducers({\r\n    counter: countReducer,\r\n    form: formReducer,\r\n  }\r\n);\r\n\r\nconst store = redux.createStore(rootReducer, redux.applyMiddleware(thunk));\r\nexport default store;\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\nconst onSubmit = (values) => {\r\n  console.log(values);\r\n}\r\n\r\nconst SimpleForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>First Name</label>\r\n        <div>\r\n          <Field\r\n            name=\"firstName\"\r\n            component=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n          />\r\n        </div>\r\n      </div>\r\n     \r\n      <div>\r\n        <label>Email</label>\r\n        <div>\r\n          <Field\r\n            name=\"email\"\r\n            component=\"input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label>Points</label>\r\n        <div>\r\n          <label>\r\n            <Field\r\n              name=\"Points\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"1\"\r\n            />{' '}\r\n            1\r\n          </label>\r\n          <label>\r\n            <Field\r\n              name=\"Points\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"2\"\r\n            />{' '}\r\n            2\r\n          </label>\r\n          <label>\r\n            <Field\r\n              name=\"Points\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"3\"\r\n            />{' '}\r\n            3\r\n          </label>\r\n          <label>\r\n            <Field\r\n              name=\"Points\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"4\"\r\n            />{' '}\r\n            4\r\n          </label>\r\n          <label>\r\n            <Field\r\n              name=\"Points\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"5\"\r\n            />{' '}\r\n            5\r\n          </label>\r\n        </div>\r\n      </div>\r\n     \r\n      <div>\r\n        <label>Comments</label>\r\n        <div>\r\n          <Field name=\"Comments\" component=\"textarea\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={handleSubmit(onSubmit)} disabled={pristine || submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'simple' // a unique identifier for this form\r\n})(SimpleForm)","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n import Hello from './Hello';\n// import './style.css';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport Form from './form';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n      <div>\n        <Hello name={this.state.name} />\n        <Form/>\n      </div>\n      </Provider>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}